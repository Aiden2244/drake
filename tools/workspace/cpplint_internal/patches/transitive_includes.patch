[cpplint_internal] For iwyu, allow foo.cc to presume foo.h includes

See https://drake.mit.edu/styleguide/cppguide.html#Include_What_You_Use:

  In particular, we do not expect a foo.cc file to repeat any #include
  statements from its associated foo.h header file.

That rule is a Drake-specific amendment to the Google Style Guide,
so would ordinarily be flagged by the upstream cpplint.py. We need
to patch the code to allow for this special case.

Reason for not upstreaming this patch: Drake-specific convention.

--- cpplint.py
+++ cpplint.py
@@ -7018,6 +7018,23 @@ def CheckForIncludeWhatYouUse(filename, clean_lines, include_state, error, io=co
     # Let's flatten the include_state include_list and copy it into a dictionary.
     include_dict = dict([item for sublist in include_state.include_list for item in sublist])
 
+    # As a Drake-specific amendment, allow path/to/foo.cc to inherit its IWYU
+    # from drake/path/to/foo.h; they are the same module.
+    for header in list(include_dict.keys()):
+        if header.startswith("drake/"):
+            (same_module, _) = FilesBelongToSameModule(f"drake/{filename}", header)
+            if same_module:
+                header_sans_drake = header[len("drake/"):]
+                headerfile = io.open(header_sans_drake, "r", "utf8", "replace")
+                linenum = 0
+                for line in headerfile:
+                    linenum += 1
+                    clean_line = CleanseComments(line)
+                    match = _RE_PATTERN_INCLUDE.search(clean_line)
+                    if match:
+                        include = match.group(2)
+                        include_dict.setdefault(include, linenum)
+
     # All the lines have been processed, report the errors found.
     for header in sorted(required, key=required.__getitem__):
         template = required[header][1]
